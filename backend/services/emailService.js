const nodemailer = require("nodemailer");

// Create transporter with environment variables
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST || "smtp.gmail.com",
  port: process.env.SMTP_PORT || 587,
  secure: false, // true for 465, false for other ports
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
});

async function sendEmail(
  recipients,
  subject,
  summary,
  senderName = "Meeting Notes Summarizer"
) {
  try {
    // Validate recipients
    if (!recipients || recipients.length === 0) {
      throw new Error("No recipients specified");
    }

    // Validate email format
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const validRecipients = recipients.filter((email) =>
      emailRegex.test(email)
    );

    if (validRecipients.length === 0) {
      throw new Error("No valid email addresses provided");
    }

    const mailOptions = {
      from: `"${senderName}" <${process.env.SMTP_USER}>`,
      to: validRecipients.join(", "),
      subject: subject || "Meeting Summary",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #333;">Meeting Summary</h2>
          <div style="background-color: #f9f9f9; padding: 20px; border-radius: 5px; margin: 20px 0;">
            ${summary.replace(/\n/g, "<br>")}
          </div>
          <p style="color: #666; font-size: 12px;">
            This summary was generated by the Meeting Notes Summarizer application.
          </p>
        </div>
      `,
      text: `Meeting Summary:\n\n${summary}\n\nGenerated by Meeting Notes Summarizer`,
    };

    const result = await transporter.sendMail(mailOptions);
    return {
      success: true,
      messageId: result.messageId,
      recipients: validRecipients,
    };
  } catch (error) {
    console.error("Email sending error:", error);
    throw new Error(`Failed to send email: ${error.message}`);
  }
}

module.exports = { sendEmail };
